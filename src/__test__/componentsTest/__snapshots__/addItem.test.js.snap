// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render correctly addItem component should render with given state from redux store 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="addItem-wrapper"
      >
        <header
          class="header-wrapper"
        >
          <svg
            aria-hidden="true"
            class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium back-icon css-i4bv87-MuiSvgIcon-root"
            data-testid="ArrowBackIcon"
            focusable="false"
            style="color: rgb(56, 142, 204);"
            viewBox="0 0 24 24"
          >
            <path
              d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
            />
          </svg>
          <h6
            class="MuiTypography-root MuiTypography-h6 add-thing-title css-2ulfj5-MuiTypography-root"
          >
            Add new thing 
          </h6>
        </header>
        <img
          alt="todo-icon"
          class="things-icon"
          src="todo.png"
        />
        <form>
          <input
            class="input-data"
            placeholder="Description"
            required=""
            type="text"
          />
          <input
            class="input-data"
            required=""
            type="date"
            value=""
          />
          <button
            class="add-btn"
            type="submit"
          >
            ADD YOUR THINGS
          </button>
        </form>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="addItem-wrapper"
    >
      <header
        class="header-wrapper"
      >
        <svg
          aria-hidden="true"
          class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium back-icon css-i4bv87-MuiSvgIcon-root"
          data-testid="ArrowBackIcon"
          focusable="false"
          style="color: rgb(56, 142, 204);"
          viewBox="0 0 24 24"
        >
          <path
            d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
          />
        </svg>
        <h6
          class="MuiTypography-root MuiTypography-h6 add-thing-title css-2ulfj5-MuiTypography-root"
        >
          Add new thing 
        </h6>
      </header>
      <img
        alt="todo-icon"
        class="things-icon"
        src="todo.png"
      />
      <form>
        <input
          class="input-data"
          placeholder="Description"
          required=""
          type="text"
        />
        <input
          class="input-data"
          required=""
          type="date"
          value=""
        />
        <button
          class="add-btn"
          type="submit"
        >
          ADD YOUR THINGS
        </button>
      </form>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
